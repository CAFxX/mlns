// minimal latency 3-sorter for B bits values
// generated by mlnsgen
// comparisons=3, evals=13, total cases=8, valid cases=6, orderings=6
module nsorter_3 #(
  parameter B = 64
) (
  input [B-1:0] in [2:0],
  output [B-1:0] out [2:0]
);
  wire c0 = in[0] < in[1];
  wire c1 = in[0] < in[2];
  wire c2 = in[1] < in[2];
  always @(*) begin
    case ({c0,c1,c2})
      3'b000: out = {in[2],in[1],in[0]};
      3'b001: out = {in[1],in[2],in[0]};
      3'b011: out = {in[1],in[0],in[2]};
      3'b100: out = {in[2],in[0],in[1]};
      3'b110: out = {in[0],in[2],in[1]};
      3'b111: out = {in[0],in[1],in[2]};
      default: out = {3{B{1'bx}}}; // 2 invalid cases
    endcase
  end
endmodule
