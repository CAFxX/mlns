// minimal latency 3-sorter for B bits values
// generated by mlnsgen
// comparisons=3, evals=13, total cases=8, valid cases=6, orderings=6
module nsorter_3 #(
  parameter B = 64
) (
  input [B-1:0] in0,
  output reg [B-1:0] out0,
  input [B-1:0] in1,
  output reg [B-1:0] out1,
  input [B-1:0] in2,
  output reg [B-1:0] out2
);
  wire c0 = in0 < in1;
  wire c1 = in0 < in2;
  wire c2 = in1 < in2;
  always @(*) begin
    case ({c0,c1,c2})
      3'b000: begin out0 = in2; out1 = in1; out2 = in0; end
      3'b001: begin out0 = in1; out1 = in2; out2 = in0; end
      3'b011: begin out0 = in1; out1 = in0; out2 = in2; end
      3'b100: begin out0 = in2; out1 = in0; out2 = in1; end
      3'b110: begin out0 = in0; out1 = in2; out2 = in1; end
      3'b111: begin out0 = in0; out1 = in1; out2 = in2; end
      default: begin out0 = {B{1'bx}}; out1 = {B{1'bx}}; out2 = {B{1'bx}}; end // 2 invalid cases
    endcase
  end
endmodule
